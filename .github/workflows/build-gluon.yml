
# Update this file after adding/removing/renaming a target by running
# `make list-targets BROKEN=1 | ./contrib/actions/generate-actions.py > ./.github/workflows/build-gluon.yml`

name: Build Gluon
on:
  push:
    branches:
      - master
      - next
      - v20*
  pull_request:
    types: [opened, synchronize, reopened]
jobs:

  ar71xx-generic:
    name: ar71xx-generic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ar71xx-generic-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ar71xx-generic
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ar71xx-generic_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ar71xx-generic_output
          path: output

  ar71xx-tiny:
    name: ar71xx-tiny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ar71xx-tiny-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ar71xx-tiny
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ar71xx-tiny_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ar71xx-tiny_output
          path: output

  ar71xx-nand:
    name: ar71xx-nand
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ar71xx-nand-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ar71xx-nand
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ar71xx-nand_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ar71xx-nand_output
          path: output

  ath79-generic:
    name: ath79-generic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ath79-generic-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ath79-generic
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ath79-generic_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ath79-generic_output
          path: output

  ath79-nand:
    name: ath79-nand
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ath79-nand
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ath79-nand_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ath79-nand_output
          path: output

  bcm27xx-bcm2708:
    name: bcm27xx-bcm2708
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-brcm2708-bcm2708-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh brcm27xx-bcm2708
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: bcm27xx-bcm2708_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: bcm27xx-bcm2708_output
          path: output

  bcm27xx-bcm2709:
    name: bcm27xx-bcm2709
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-brcm2708-bcm2709-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh brcm27xx-bcm2709
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: bcm27xx-bcm2709_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: bcm27xx-bcm2709_output
          path: output

  ipq40xx-generic:
    name: ipq40xx-generic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ipq40xx-generic-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ipq40xx-generic
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ipq40xx-generic_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ipq40xx-generic_output
          path: output

  ipq806x-generic:
    name: ipq806x-generic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ipq806x-generic-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ipq806x-generic
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ipq806x-generic_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ipq806x-generic_output
          path: output

  lantiq-xrx200:
    name: lantiq-xrx200
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-lantiq-xrx200-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh lantiq-xrx200
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: lantiq-xrx200_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: lantiq-xrx200_output
          path: output

  lantiq-xway:
    name: lantiq-xway
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-lantiq-xway-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh lantiq-xway
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: lantiq-xway_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: lantiq-xway_output
          path: output

  mpc85xx-p1010:
    name: mpc85xx-p1010
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-mpc85xx-generic-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh mpc85xx-p1010
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: mpc85xx-p1010_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: mpc85xx-p1010_output
          path: output

  mpc85xx-p1020:
    name: mpc85xx-p1020
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-mpc85xx-p1020-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh mpc85xx-p1020
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: mpc85xx-p1020_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: mpc85xx-p1020_output
          path: output

  ramips-mt7620:
    name: ramips-mt7620
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ramips-mt7620-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ramips-mt7620
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ramips-mt7620_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ramips-mt7620_output
          path: output

  ramips-mt7621:
    name: ramips-mt7621
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ramips-mt7621-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ramips-mt7621
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ramips-mt7621_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ramips-mt7621_output
          path: output

  ramips-mt76x8:
    name: ramips-mt76x8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ramips-mt76x8-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ramips-mt76x8
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ramips-mt76x8_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ramips-mt76x8_output
          path: output

  ramips-rt305x:
    name: ramips-rt305x
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ramips-rt305x-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ramips-rt305x
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ramips-rt305x_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ramips-rt305x_output
          path: output

  sunxi-cortexa7:
    name: sunxi-cortexa7
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-sunxi-cortexa7-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh sunxi-cortexa7
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: sunxi-cortexa7_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: sunxi-cortexa7_output
          path: output

  x86-generic:
    name: x86-generic
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-x86-generic-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh x86-generic
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: x86-generic_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: x86-generic_output
          path: output

  x86-geode:
    name: x86-geode
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-x86-geode-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh x86-geode
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: x86-geode_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: x86-geode_output
          path: output

  x86-legacy:
    name: x86-legacy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-x86-legacy-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh x86-legacy
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: x86-legacy_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: x86-legacy_output
          path: output

  x86-64:
    name: x86-64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-x86-64-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh x86-64
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: x86-64_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: x86-64_output
          path: output

  ar71xx-mikrotik:
    name: ar71xx-mikrotik
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-ar71xx-mikrotik-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh ar71xx-mikrotik
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: ar71xx-mikrotik_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: ar71xx-mikrotik_output
          path: output

  bcm27xx-bcm2710:
    name: bcm27xx-bcm2710
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-brcm2708-bcm2710-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh brcm27xx-bcm2710
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: bcm27xx-bcm2710_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: bcm27xx-bcm2710_output
          path: output

  mvebu-cortexa9:
    name: mvebu-cortexa9
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v2
        id: cache-dl
        with:
          path: dl_target
          key: openwrt-dl-mvebu-cortexa9-${{ hashFiles('modules') }}
      - name: Prepare download cache
        if: steps.cache-dl.outputs.cache-hit == 'true'
        run: mkdir -p openwrt/dl; mv dl_target/* openwrt/dl/; ls openwrt/dl
      - name: Install Dependencies
        run: sudo contrib/actions/install-dependencies.sh
      - name: Build
        run: contrib/actions/run-build.sh mvebu-cortexa9
      - name: Create cache to save
        if: steps.cache-dl.outputs.cache-hit != 'true'
        run: mkdir dl_target; mv openwrt/dl/* dl_target/; find dl_target/ -size +20M -delete
      - name: Archive build logs
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v1
        with:
          name: mvebu-cortexa9_logs
          path: openwrt/logs
      - name: Archive build output
        uses: actions/upload-artifact@v1
        with:
          name: mvebu-cortexa9_output
          path: output

