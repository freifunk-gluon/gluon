#!/usr/bin/lua

local uci = require("simple-uci").cursor()
local wireless = require 'gluon.wireless'
local util = require 'gluon.util'

local function configure_private_wifi(radio, index)
	local radio_name = radio['.name']
	local suffix = radio_name:match('^radio(%d+)$')
	local name   = "wan_" .. radio_name

	if not suffix then
		return
	end

	local encryption = uci:get('gluon', 'wireless', 'private_encryption')
	local ssid = uci:get('gluon', 'wireless', 'private_ssid')
	local key = uci:get('gluon', 'wireless', 'private_key')
	local mfp = wireless.device_supports_mfp(uci) and uci:get('gluon', 'wireless', 'private_mfp')

	local macaddr = wireless.get_wlan_mac('wan_radio', index, radio)
	uci:section('wireless', 'wifi-iface', name, {
		device     = radio_name,
		network    = 'wan',
		mode       = 'ap',
		encryption = encryption,
		ssid       = ssid,
		key        = key,
		macaddr    = macaddr,
		ifname     = 'wl-wan' .. suffix,
	})

	-- hostapd-mini won't start in case 802.11w is configured
	if mfp then
		uci:set('wireless', name, 'ieee80211w', mfp)
	end
end

wireless.foreach_radio(uci, function(radio, index)
	local roles = wireless.radio_roles(uci, radio)

	if util.contains(roles, 'private') then
		configure_private_wifi(radio, index)
	end
end)

uci:save('wireless')
