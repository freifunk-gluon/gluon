-- This is an example site configuration for Gluon v2014.4
--
-- Take a look at the documentation located at
-- http://gluon.readthedocs.org/ for details.
--
-- This configuration will not work as it. You're required to make
-- community specific changes to it!
{
  -- Used for generated hostnames, e.g. freifunk-abcdef123456. (optional)
  -- hostname_prefix = 'freifunk-',

  -- Name of the community.
  site_name = 'Freifunk Entenhausen',

  -- Shorthand of the community.
  site_code = 'ffxx',

  -- Prefixes used within the mesh. Both are required.
  prefix4 = '10.xxx.0.0/20',
  prefix6 = 'fdxx:xxxx:xxxx::/64',

  -- Timezone of your community.
  -- See http://wiki.openwrt.org/doc/uci/system#time_zones
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  -- List of NTP servers in your community.
  -- Must be reachable using IPv6!
  ntp_servers = {'1.ntp.services.ffxx'},

  -- Wireless regulatory domain of your community.
  regdom = 'DE',

  -- Wireless configuration for 2.4 GHz interfaces.
  wifi24 = {
    -- Wireless channel.
    channel = 1,

    -- ESSID used for client network.
    ssid = 'entenhausen.freifunk.net',

    -- Specifies the channel width in 802.11n and 802.11ac mode.
    -- Possible values are:
    -- HT20 (single 20MHz channel),
    -- HT40- (2x 20MHz channels, secondary below)
    -- HT40+ (2x 20MHz channels, secondary above)
    htmode = 'HT20',

    -- Adjust these values!
    mesh_ssid = 'xe:xx:xx:xx:xx:xx',  -- ESSID used for mesh
    mesh_bssid = 'xe:xx:xx:xx:xx:xx', -- BSSID used for mesh

    -- Bitrate used for multicast/broadcast packets.
    mesh_mcast_rate = 12000,

    -- (optional) mesh VLAN on 802.11 ad-hoc interface (1-4095)
    -- mesh_vlan = 14,
  },

  -- Wireless configuration for 5 GHz interfaces.
  -- This should be equal to the 2.4 GHz variant, except
  -- for channel and htmode.
  wifi5 = {
    ssid = 'entenhausen.freifunk.net',
    channel = 44,
    htmode = 'HT20',
    mesh_ssid = 'xx:xx:xx:xx:xx:xx',
    mesh_bssid = 'xx:xx:xx:xx:xx:xx',
    mesh_mcast_rate = 12000,
    -- mesh_vlan = 14,
  },

  -- The next node feature allows clients to always reach the node it is
  -- connected to using a known IP address.
  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.xxx.0.xxx',
    ip6 = 'fdxx:xxxx:xxxx::xxxx',

    -- anycast MAC of all nodes
    mac = 'xe:xx:xx:xx:xx:xx',
  },

  -- Refer to http://fastd.readthedocs.org/en/latest/ to better understand
  -- what these options do.
  fastd_mesh_vpn = {
    -- List of crypto-methods to use.
    methods = {'salsa2012+umac'},
    mtu = 1426,
    backbone = {
      -- Limit number of connected peers to reduce bandwidth.
      limit = 2,

      -- List of peers.
      peers = {
        peer1 = {
          key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',

          -- This is a list, so you might add multiple entries.
          remotes = {'ipv4 "xxx.somehost.invalid" port xxxxxx'},
        },
        peer2 = {
          key = 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',
          -- You can also omit the ipv4 to allow both connection via ipv4 and ipv6
          remotes = {'"xxx.somehost2.invalid" port xxxxx'},
        },
      },
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'http://1.updates.services.ffhl/stable/sysupgrade'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Alice
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Bob
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Mary
        },
      },
    },
  },

  -- Node roles
  -- roles {
  --   default = 'node',
  --   list = {
  --     node = 'Normal Node',
  --     test = 'Test Node',
  --     backbone = 'Backbone Node',
  --     service = 'Service Node',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = false,

      -- Default upload limit (kbit/s).
      limit_egress = 200,

      -- Default download limit (kbit/s).
      limit_ingress = 3000,
    },
  },

  -- Skip setup mode (config mode) on first boot
  -- setup_mode = {
  --  skip = true,
  -- },
}
