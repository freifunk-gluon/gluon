From: Matthias Schiffer <mschiffer@universe-factory.net>
Date: Thu, 29 Jan 2015 07:48:03 +0100
Subject: fastd: update to v17

diff --git a/net/fastd/Config.in b/net/fastd/Config.in
index ca4045c..5820b97 100644
--- a/net/fastd/Config.in
+++ b/net/fastd/Config.in
@@ -11,6 +11,11 @@ config FASTD_ENABLE_METHOD_COMPOSED_GMAC
 	depends on PACKAGE_fastd
 	default y
 
+config FASTD_ENABLE_METHOD_COMPOSED_UMAC
+	bool "Enable composed-umac method provider"
+	depends on PACKAGE_fastd
+	default y
+
 config FASTD_ENABLE_METHOD_GENERIC_GMAC
 	bool "Enable generic-gmac method provider"
 	depends on PACKAGE_fastd
@@ -21,6 +26,11 @@ config FASTD_ENABLE_METHOD_GENERIC_POLY1305
 	depends on PACKAGE_fastd
 	default n
 
+config FASTD_ENABLE_METHOD_GENERIC_UMAC
+	bool "Enable generic-umac method provider"
+	depends on PACKAGE_fastd
+	default y
+
 config FASTD_ENABLE_METHOD_NULL
 	bool "Enable null method"
 	depends on PACKAGE_fastd
@@ -58,6 +68,11 @@ config FASTD_ENABLE_MAC_GHASH
 	depends on PACKAGE_fastd
 	default y
 
+config FASTD_ENABLE_MAC_UHASH
+	bool "Enable the UHASH message authentication code"
+	depends on PACKAGE_fastd
+	default y
+
 
 config FASTD_WITH_CMDLINE_USER
 	bool "Include support for setting user/group related options on the command line"
@@ -79,9 +94,15 @@ config FASTD_WITH_CMDLINE_COMMANDS
 	depends on PACKAGE_fastd
 	default n
 
-config FASTD_WITH_VERIFY
-        bool "Include support for on-verify handlers"
-        depends on PACKAGE_fastd
-        default n
+config FASTD_WITH_DYNAMIC_PEERS
+	bool "Include support for on-verify handlers"
+	depends on PACKAGE_fastd
+	default n
+
+config FASTD_WITH_STATUS_SOCKET
+	bool "Include support for status sockets"
+	depends on PACKAGE_fastd
+	default y
+
 
 endmenu
diff --git a/net/fastd/Makefile b/net/fastd/Makefile
index 0629cd7..027f549 100644
--- a/net/fastd/Makefile
+++ b/net/fastd/Makefile
@@ -1,5 +1,5 @@
 #
-# Copyright (C) 2012-2014 OpenWrt.org
+# Copyright (C) 2012-2015 OpenWrt.org
 #
 # This is free software, licensed under the GNU General Public License v2.
 # See /LICENSE for more information.
@@ -8,19 +8,24 @@
 include $(TOPDIR)/rules.mk
 
 PKG_NAME:=fastd
-PKG_VERSION:=14
+PKG_VERSION:=17
 PKG_RELEASE:=1
 
 PKG_MAINTAINER:=Matthias Schiffer <mschiffer@universe-factory.net>
 PKG_SOURCE:=$(PKG_NAME)-$(PKG_VERSION).tar.xz
-PKG_SOURCE_URL:=https://projects.universe-factory.net/attachments/download/75
-PKG_MD5SUM:=34f6bdebd0410a1fba7c8fd06fff7a05
+PKG_SOURCE_URL:=https://projects.universe-factory.net/attachments/download/81
+PKG_MD5SUM:=bad4f1948702f418b799578f83a0edb8
+
+PKG_LICENSE:=BSD-2-Clause
+PKG_LICENSE_FILES:=COPYRIGHT
 
 PKG_CONFIG_DEPENDS:=\
 	CONFIG_FASTD_ENABLE_METHOD_CIPHER_TEST \
 	CONFIG_FASTD_ENABLE_METHOD_COMPOSED_GMAC \
+	CONFIG_FASTD_ENABLE_METHOD_COMPOSED_UMAC \
 	CONFIG_FASTD_ENABLE_METHOD_GENERIC_GMAC \
 	CONFIG_FASTD_ENABLE_METHOD_GENERIC_POLY1305 \
+	CONFIG_FASTD_ENABLE_METHOD_GENERIC_UMAC \
 	CONFIG_FASTD_ENABLE_METHOD_NULL \
 	CONFIG_FASTD_ENABLE_METHOD_XSALSA20_POLY1305 \
 	CONFIG_FASTD_ENABLE_CIPHER_AES128_CTR \
@@ -28,11 +33,13 @@ PKG_CONFIG_DEPENDS:=\
 	CONFIG_FASTD_ENABLE_CIPHER_SALSA20 \
 	CONFIG_FASTD_ENABLE_CIPHER_SALSA2012 \
 	CONFIG_FASTD_ENABLE_MAC_GHASH \
+	CONFIG_FASTD_ENABLE_MAC_UHASH \
 	CONFIG_FASTD_WITH_CMDLINE_USER \
 	CONFIG_FASTD_WITH_CMDLINE_LOGGING \
 	CONFIG_FASTD_WITH_CMDLINE_OPERATION \
 	CONFIG_FASTD_WITH_CMDLINE_COMMANDS \
-	CONFIG_FASTD_WITH_VERIFY
+	CONFIG_FASTD_WITH_DYNAMIC_PEERS \
+	CONFIG_FASTD_WITH_STATUS_SOCKET
 
 
 PKG_BUILD_DEPENDS:=nacl libuecc
@@ -43,7 +50,7 @@ include $(INCLUDE_DIR)/cmake.mk
 define Package/fastd
   SECTION:=net
   CATEGORY:=Network
-  DEPENDS:=+kmod-tun +librt +libpthread
+  DEPENDS:=+kmod-tun +librt +libpthread +FASTD_WITH_STATUS_SOCKET:libjson-c
   TITLE:=Fast and Secure Tunneling Daemon
   URL:=https://projects.universe-factory.net/projects/fastd
   SUBMENU:=VPN
@@ -60,8 +67,10 @@ CMAKE_OPTIONS += \
 	-DCMAKE_BUILD_TYPE:STRING=MINSIZEREL \
 	-DWITH_METHOD_CIPHER_TEST:BOOL=FALSE \
 	-DWITH_METHOD_COMPOSED_GMAC:BOOL=FALSE \
+	-DWITH_METHOD_COMPOSED_UMAC:BOOL=FALSE \
 	-DWITH_METHOD_GENERIC_GMAC:BOOL=FALSE \
 	-DWITH_METHOD_GENERIC_POLY1305:BOOL=FALSE \
+	-DWITH_METHOD_GENERIC_UMAC:BOOL=FALSE \
 	-DWITH_METHOD_NULL:BOOL=FALSE \
 	-DWITH_METHOD_XSALSA20_POLY1305:BOOL=FALSE \
 	-DWITH_CIPHER_AES128_CTR:BOOL=FALSE \
@@ -69,11 +78,13 @@ CMAKE_OPTIONS += \
 	-DWITH_CIPHER_SALSA20:BOOL=FALSE \
 	-DWITH_CIPHER_SALSA2012:BOOL=FALSE \
 	-DWITH_MAC_GHASH:BOOL=FALSE \
+	-DWITH_MAC_UHASH:BOOL=FALSE \
 	-DWITH_CMDLINE_USER:BOOL=FALSE \
 	-DWITH_CMDLINE_LOGGING:BOOL=FALSE \
 	-DWITH_CMDLINE_OPERATION:BOOL=FALSE \
 	-DWITH_CMDLINE_COMMANDS:BOOL=FALSE \
-	-DWITH_VERIFY:BOOL=FALSE \
+	-DWITH_DYNAMIC_PEERS:BOOL=FALSE \
+	-DWITH_STATUS_SOCKET:BOOL=FALSE \
 	-DWITH_CAPABILITIES:BOOL=FALSE \
 	-DENABLE_SYSTEMD:BOOL=FALSE \
 	-DENABLE_LIBSODIUM:BOOL=FALSE \
@@ -88,6 +99,10 @@ ifeq ($(CONFIG_FASTD_ENABLE_METHOD_COMPOSED_GMAC),y)
 CMAKE_OPTIONS += -DWITH_METHOD_COMPOSED_GMAC:BOOL=TRUE
 endif
 
+ifeq ($(CONFIG_FASTD_ENABLE_METHOD_COMPOSED_UMAC),y)
+CMAKE_OPTIONS += -DWITH_METHOD_COMPOSED_UMAC:BOOL=TRUE
+endif
+
 ifeq ($(CONFIG_FASTD_ENABLE_METHOD_GENERIC_GMAC),y)
 CMAKE_OPTIONS += -DWITH_METHOD_GENERIC_GMAC:BOOL=TRUE
 endif
@@ -96,6 +111,10 @@ ifeq ($(CONFIG_FASTD_ENABLE_METHOD_GENERIC_POLY1305),y)
 CMAKE_OPTIONS += -DWITH_METHOD_GENERIC_POLY1305:BOOL=TRUE
 endif
 
+ifeq ($(CONFIG_FASTD_ENABLE_METHOD_GENERIC_UMAC),y)
+CMAKE_OPTIONS += -DWITH_METHOD_GENERIC_UMAC:BOOL=TRUE
+endif
+
 ifeq ($(CONFIG_FASTD_ENABLE_METHOD_NULL),y)
 CMAKE_OPTIONS += -DWITH_METHOD_NULL:BOOL=TRUE
 endif
@@ -126,6 +145,10 @@ ifeq ($(CONFIG_FASTD_ENABLE_MAC_GHASH),y)
 CMAKE_OPTIONS += -DWITH_MAC_GHASH:BOOL=TRUE
 endif
 
+ifeq ($(CONFIG_FASTD_ENABLE_MAC_UHASH),y)
+CMAKE_OPTIONS += -DWITH_MAC_UHASH:BOOL=TRUE
+endif
+
 
 ifeq ($(CONFIG_FASTD_WITH_CMDLINE_USER),y)
 CMAKE_OPTIONS += -DWITH_CMDLINE_USER:BOOL=TRUE
@@ -143,8 +166,12 @@ ifeq ($(CONFIG_FASTD_WITH_CMDLINE_COMMANDS),y)
 CMAKE_OPTIONS += -DWITH_CMDLINE_COMMANDS:BOOL=TRUE
 endif
 
-ifeq ($(CONFIG_FASTD_WITH_VERIFY),y)
-CMAKE_OPTIONS += -DWITH_VERIFY:BOOL=TRUE
+ifeq ($(CONFIG_FASTD_WITH_DYNAMIC_PEERS),y)
+CMAKE_OPTIONS += -DWITH_DYNAMIC_PEERS:BOOL=TRUE
+endif
+
+ifeq ($(CONFIG_FASTD_WITH_STATUS_SOCKET),y)
+CMAKE_OPTIONS += -DWITH_STATUS_SOCKET:BOOL=TRUE
 endif
 
 
@@ -161,9 +188,9 @@ define Package/fastd/install
 	$(INSTALL_BIN) $(PKG_INSTALL_DIR)/usr/bin/fastd $(1)/usr/bin/
 
 	$(INSTALL_DIR) $(1)/etc/init.d/
-	$(INSTALL_BIN) files/fastd.init $(1)/etc/init.d/fastd
+	$(INSTALL_BIN) $(PKG_BUILD_DIR)/doc/examples/openwrt/fastd.init $(1)/etc/init.d/fastd
 	$(INSTALL_DIR) $(1)/etc/config
-	$(INSTALL_CONF) files/fastd.config $(1)/etc/config/fastd
+	$(INSTALL_CONF) $(PKG_BUILD_DIR)/doc/examples/openwrt/fastd.config $(1)/etc/config/fastd
 	$(INSTALL_DIR) $(1)/etc/fastd
 	$(INSTALL_DIR) $(1)/lib/upgrade/keep.d
 	$(INSTALL_DATA) files/fastd.upgrade $(1)/lib/upgrade/keep.d/fastd
